:- dynamic(has_symptom/2).
:- dynamic(has_environment/2).
:- initialization(main).

% Disease rules
at_risk_of_fungal_disease(Plant) :- 
    has_symptom(Plant, powdery_substance),
    has_symptom(Plant, leaf_spots),
    has_environment(Plant, high_humidity).

at_risk_of_bacterial_disease(Plant) :- 
    has_symptom(Plant, wilting),
    has_symptom(Plant, yellow_leaves),
    has_environment(Plant, overwatering).

at_risk_of_viral_disease(Plant) :- 
    has_symptom(Plant, leaf_curling),
    has_symptom(Plant, yellow_leaves),
    \+ has_environment(Plant, overwatering).

% Diagnosis logic
check_plant_disease(Plant) :- 
    at_risk_of_fungal_disease(Plant), 
    write(Plant), write(' is at risk of fungal disease.'), nl.

check_plant_disease(Plant) :- 
    at_risk_of_bacterial_disease(Plant), 
    write(Plant), write(' is at risk of bacterial disease.'), nl.

check_plant_disease(Plant) :- 
    at_risk_of_viral_disease(Plant), 
    write(Plant), write(' is at risk of viral disease.'), nl.

check_plant_disease(Plant) :- 
    \+ at_risk_of_fungal_disease(Plant), 
    \+ at_risk_of_bacterial_disease(Plant), 
    \+ at_risk_of_viral_disease(Plant), 
    write(Plant), write(' shows no sign of serious disease.'), nl.

% Main
main :-
    read(Plant),
    
    read(Symptoms),
    assert_symptoms(Plant, Symptoms),

    read(EnvConds),
    assert_environments(Plant, EnvConds),

    check_plant_disease(Plant).

% Helpers to assert facts dynamically
assert_symptoms(_, []).
assert_symptoms(Plant, [H|T]) :-
    assertz(has_symptom(Plant, H)),
    assert_symptoms(Plant, T).

assert_environments(_, []).
assert_environments(Plant, [H|T]) :-
    assertz(has_environment(Plant, H)),
    assert_environments(Plant, T).
